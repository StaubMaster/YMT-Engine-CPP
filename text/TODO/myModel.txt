

all the stuff I want to do needs 3D Models
specifically Files

I already have a bunch in .polyhedra.ymt
but the format is not finished
and still kind of janky

just use .obj ?





in the past I had an Idea of having PolyHedra be abstract
so its just Corners and Faces
no Colors / Textures

I could make that
and make OBJ inherit / use that

my thaught is that I dont really need the save the whole thing
it gets assambled differently for the buffers anyway
and the only part that might be needed agains would be for intersections ?
which only needs corners and faces





PolyHedraBase<CornerType, FaceType>

PolyHedra
	simple Corners and Faces

problem:
OBJ has different Arrays for the different Datas
and just referances them by Index
I dont think there is an easy way to generalize that



PolyHedra
{
	< Float 3 > Corners
	< Index 3 > Faces
	SkinBase * Skin
}

make it have a Pointer to a "Skin"
Skin can be NULL for fully abstract
Skin2DA (Texture 2D Array)
{
	< Float 3 > Texture Coords
	TextureArray
}

TextureArray:
	currenty its called that but is for 2D Array specifically
	rename / also generalize
	I dont see why I would currenty need others
	so just rename
	if I want to change it to inherit later on it will be easyer

all this would also require the .ymt file parsing stuff
but the current is very complex
so just implement a simple version for now





Generate Models ?
	Basic:
		Cube
		Cone
		Ball
		Pyramide ?
	Complex:
		Tower ?
		Tree ?
		

